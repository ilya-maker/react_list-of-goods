{"version":3,"sources":["components/GoodItem.js","components/Buttons.js","components/GoodList.js","App.js","index.js"],"names":["GoodItem","item","className","Buttons","reverse","sortAlphabetically","sortByLength","reset","sortSelectLength","selectValues","defaultValue","type","onClick","name","onChange","event","target","value","map","el","key","GoodList","state","allHidden","list","props","setState","sort","a","b","length","filter","this","Array","fill","i","React","Component","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,wBAAIC,UAAU,cACXD,ICFQE,EAAU,SAAC,GAAD,IACnBC,EADmB,EACnBA,QACAC,EAFmB,EAEnBA,mBACAC,EAHmB,EAGnBA,aACAC,EAJmB,EAInBA,MACAC,EALmB,EAKnBA,iBACAC,EANmB,EAMnBA,aACAC,EAPmB,EAOnBA,aAPmB,OASrB,oCACE,4BAAQC,KAAK,SAASC,QAASR,GAA/B,WAGA,4BAAQO,KAAK,SAASC,QAASP,GAA/B,uBAGA,4BAAQM,KAAK,SAASC,QAASN,GAA/B,kBAGA,4BAAQK,KAAK,SAASC,QAASL,GAA/B,SAGA,4BACEM,KAAK,SACLC,SAAU,SAAAC,GAAK,OAAIP,EAAiBO,EAAMC,OAAOC,QACjDA,MAAOP,GAEND,EAAaS,KAAI,SAAAC,GAAE,OAClB,4BAAQF,MAAOE,EAAIC,IAAKD,GACrBA,SC3BEE,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,KAAK,YAAK,EAAKC,MAAMD,MACrBd,aAAc,GAJlB,EAOEL,mBAAqB,WACnB,EAAKqB,UAAS,SAAAJ,GAAK,MAAK,CACtBE,KAAM,YAAIF,EAAME,MAAMG,YAT5B,EAaErB,aAAe,WACb,EAAKoB,UAAS,SAAAJ,GAAK,MAAK,CACtBE,KAAM,YAAIF,EAAME,MAAMG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,eAfxD,EAmBEvB,MAAQ,WAAO,IACLiB,EAAS,EAAKC,MAAdD,KAER,EAAKE,UAAS,iBAAO,CACnBF,KAAK,YAAKA,GACVd,aAAc,OAxBpB,EA4BEN,QAAU,WACR,EAAKsB,UAAS,SAAAJ,GAAK,MAAK,CACtBE,KAAK,YAAKF,EAAME,KAAKpB,gBA9B3B,EAkCEI,iBAAmB,SAACS,GAClB,EAAKS,UAAS,iBAAO,CACnBF,KAAM,EAAKC,MAAMD,KAAKO,QAAO,SAAAZ,GAAE,OAAKA,EAAGW,QAAUb,KACjDP,aAAcO,OArCpB,uDAyCY,IAAD,SACmCe,KAAKV,MAAvCC,EADD,EACCA,UAAWC,EADZ,EACYA,KAAMd,EADlB,EACkBA,aACnBD,EAAe,IAAIwB,MAAM,IAAIC,KAAK,GAAGhB,KAAI,SAACC,EAAIgB,GAAL,OAAW,EAAIA,KAE9D,OACE,oCACGZ,GACC,4BACEZ,KAAK,SACLC,QAAS,WACP,EAAKc,SAAS,CAAEH,WAAW,MAH/B,aASAA,GACA,oCACE,wBAAIrB,UAAU,QACXsB,EAAKN,KAAI,SAAAC,GAAE,OAAK,kBAAC,EAAD,CAAUlB,KAAMkB,EAAIC,IAAKD,QAE5C,kBAAC,EAAD,CACEf,QAAS4B,KAAK5B,QACdC,mBAAoB2B,KAAK3B,mBACzBC,aAAc0B,KAAK1B,aACnBC,MAAOyB,KAAKzB,MACZC,iBAAkBwB,KAAKxB,iBACvBC,aAAcA,EACdC,aAAcA,UArE5B,GAA8B0B,IAAMC,WCD9BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASaC,EANH,kBACV,yBAAKrC,UAAU,OACb,kBAAC,EAAD,CAAUsB,KAAMc,MCfpBE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.58991977.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodItem = ({ item }) => (\n  <li className=\"list__item\">\n    {item}\n  </li>\n);\n\nGoodItem.propTypes = {\n  item: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Buttons = (\n  { reverse,\n    sortAlphabetically,\n    sortByLength,\n    reset,\n    sortSelectLength,\n    selectValues,\n    defaultValue },\n) => (\n  <>\n    <button type=\"button\" onClick={reverse}>\n      Reverse\n    </button>\n    <button type=\"button\" onClick={sortAlphabetically}>\n      Sort alphabetically\n    </button>\n    <button type=\"button\" onClick={sortByLength}>\n      Sort by length\n    </button>\n    <button type=\"button\" onClick={reset}>\n      Reset\n    </button>\n    <select\n      name=\"select\"\n      onChange={event => sortSelectLength(event.target.value)}\n      value={defaultValue}\n    >\n      {selectValues.map(el => (\n        <option value={el} key={el}>\n          {el}\n        </option>\n      ))}\n    </select>\n  </>\n);\n\nButtons.propTypes = {\n  reverse: PropTypes.func.isRequired,\n  sortAlphabetically: PropTypes.func.isRequired,\n  sortByLength: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  sortSelectLength: PropTypes.func.isRequired,\n  selectValues: PropTypes.arrayOf(PropTypes.number).isRequired,\n  defaultValue: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoodItem } from './GoodItem';\nimport { Buttons } from './Buttons';\n\nexport class GoodList extends React.Component {\n  state = {\n    allHidden: true,\n    list: [...this.props.list],\n    defaultValue: 1,\n  };\n\n  sortAlphabetically = () => {\n    this.setState(state => ({\n      list: [...state.list].sort(),\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(state => ({\n      list: [...state.list].sort((a, b) => a.length - b.length),\n    }));\n  };\n\n  reset = () => {\n    const { list } = this.props;\n\n    this.setState(() => ({\n      list: [...list],\n      defaultValue: 1,\n    }));\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      list: [...state.list.reverse()],\n    }));\n  };\n\n  sortSelectLength = (value) => {\n    this.setState(() => ({\n      list: this.props.list.filter(el => (el.length >= value)),\n      defaultValue: value,\n    }));\n  };\n\n  render() {\n    const { allHidden, list, defaultValue } = this.state;\n    const selectValues = new Array(10).fill(0).map((el, i) => 1 + i);\n\n    return (\n      <>\n        {allHidden && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ allHidden: false });\n            }}\n          >\n            Startyem\n          </button>\n        )}\n        {!allHidden && (\n          <>\n            <ul className=\"list\">\n              {list.map(el => (<GoodItem item={el} key={el} />))}\n            </ul>\n            <Buttons\n              reverse={this.reverse}\n              sortAlphabetically={this.sortAlphabetically}\n              sortByLength={this.sortByLength}\n              reset={this.reset}\n              sortSelectLength={this.sortSelectLength}\n              selectValues={selectValues}\n              defaultValue={defaultValue}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nGoodList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodList } from './components/GoodList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <GoodList list={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}